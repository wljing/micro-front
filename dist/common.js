!function(I,g){if("object"==typeof exports&&"object"==typeof module)module.exports=g();else if("function"==typeof define&&define.amd)define([],g);else{var C=g();for(var Q in C)("object"==typeof exports?exports:I)[Q]=C[Q]}}(window,(function(){return function(I){var g={};function C(Q){if(g[Q])return g[Q].exports;var B=g[Q]={i:Q,l:!1,exports:{}};return I[Q].call(B.exports,B,B.exports,C),B.l=!0,B.exports}return C.m=I,C.c=g,C.d=function(I,g,Q){C.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:Q})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,g){if(1&g&&(I=C(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var Q=Object.create(null);if(C.r(Q),Object.defineProperty(Q,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var B in I)C.d(Q,B,function(g){return I[g]}.bind(null,B));return Q},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="",C(C.s=1)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.__esModule = true;\nvar windoFunMap = new Map([['alert', true], ['atob', true], ['blur', true], ['btoa', true], ['cancelAnimateFrame', true], ['cancelIdleCallback', true], ['captrueEvents', true], ['clearInterval', true], ['clearTimeout', true], ['close', true], ['confirm', true], ['fetch', true], ['find', true], ['focus', true], ['getAttention', true], ['getComputedStyle', true], ['getDefaultComputedStyle', true], ['getSelection', true], ['setTimeout', true], ['setInterval', true], ['addEventListener', true], ['postMessage', true]]);\n\nvar JsSandBox = function () {\n  function JsSandBox() {\n    this.isShowLog = false;\n    this.init();\n  }\n\n  JsSandBox.defineGlobalProperty = function (key, value) {\n    JsSandBox.GlobalPropertyMap.set(key, value);\n  };\n\n  JsSandBox.prototype.init = function () {\n    this.propertiesMap = new Map();\n    this.unConfigurableMap = new Map();\n    this.initFakerWindow();\n    this.mountFakerWindow();\n  };\n\n  JsSandBox.prototype.run = function (script, cb) {\n    if (cb === void 0) {\n      cb = function cb() {};\n    }\n\n    var fn = new Function(\"\\n      with(window['\" + this.sandBoxName + \"']) {\\n        \" + script + \"\\n      }\\n    \");\n    fn();\n    cb();\n  };\n\n  JsSandBox.prototype.initFakerWindow = function () {\n    var unConfigurableMap = this.unConfigurableMap;\n    var descs = Object.getOwnPropertyDescriptors(window);\n    Object.keys(descs).forEach(function (p) {\n      if (!Reflect.getOwnPropertyDescriptor(window, p).configurable) {\n        unConfigurableMap.set(p, window[p]);\n      }\n    });\n    var self = this;\n    var unscopables = {\n      undefined: true,\n      Array: true,\n      Object: true,\n      String: true,\n      Boolean: true,\n      Math: true,\n      Number: true,\n      Symbol: true,\n      parseFloat: true,\n      Float32Array: true\n    };\n    this.fakerWindow = new Proxy(window, {\n      get: function get(target, p) {\n        var result = null;\n        var log = '';\n\n        if (p === 'window' || p === 'self' || p === 'top' || p === 'parent') {\n          result = self.fakerWindow;\n          log = 'global';\n        } else if (p === Symbol.unscopables) {\n          result = unscopables;\n          log = 'unscopables';\n        } else if (unConfigurableMap.has(p)) {\n          result = window[p];\n          log = 'unconfig';\n        } else if (JsSandBox.GlobalPropertyMap.has(p)) {\n          log = 'global';\n          result = JsSandBox.GlobalPropertyMap.get(p);\n        } else if (self.propertiesMap.has(p)) {\n          log = 'sendbox';\n          result = self.propertiesMap.get(p);\n        } else {\n          log = 'window';\n          result = window[p];\n\n          if (windoFunMap.has(p)) {\n            result = result.bind(window);\n          }\n        }\n\n        if (self.isShowLog) {\n          console.log('get', p, result, log);\n        }\n\n        return result;\n      },\n      set: function set(target, p, v) {\n        var log = '';\n\n        if (self.unConfigurableMap.has(p)) {\n          log = 'unconfig';\n          return false;\n        } else if (JsSandBox.GlobalPropertyMap.has(p)) {\n          JsSandBox.GlobalPropertyMap.set(p, v);\n          log = 'global';\n        } else {\n          log = 'sendbox';\n          self.propertiesMap.set(p, v);\n\n          if (!Reflect.has(window, p)) {\n            window[p] = v;\n          }\n        }\n\n        if (self.isShowLog) {\n          console.log('set', p, v, log);\n        }\n\n        return true;\n      }\n    });\n  };\n\n  JsSandBox.prototype.mountFakerWindow = function () {\n    var sandBoxName = \"\" + JsSandBox.PreSandBoxName + JsSandBox.JsSandBoxIndex++;\n    this.sandBoxName = sandBoxName;\n    var fakerWindow = this.fakerWindow;\n    Reflect.defineProperty(window, sandBoxName, {\n      value: fakerWindow,\n      configurable: false,\n      enumerable: false,\n      writable: false\n    });\n  };\n\n  JsSandBox.JsSandBoxIndex = 0;\n  JsSandBox.PreSandBoxName = '__JS_SAND_BOX_';\n  JsSandBox.GlobalPropertyMap = new Map();\n  return JsSandBox;\n}();\n\nexports[\"default\"] = JsSandBox;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(2);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsbUJBQU8sQ0FBQyxDQUFELENBQXhCIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuL0FwcE1hbm5nZXJcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar JsSandBox_1 = __webpack_require__(0);\n\nvar index_1 = __webpack_require__(3);\n\nvar Communicator_1 = __webpack_require__(4);\n\nJsSandBox_1["default"].defineGlobalProperty(\'IPC\', new Communicator_1["default"]());\n\nvar AppMannger = function () {\n  function AppMannger(config) {\n    var _this = this;\n\n    this.getAppId = function () {\n      return "AppId_" + AppMannger.APP_INDEX++;\n    };\n\n    this.init = function () {\n      var apps = _this.config.apps;\n      apps.forEach(function (appConfig) {\n        _this.add(appConfig);\n      });\n    };\n\n    this.load = function (appId, parent, force) {\n      if (force === void 0) {\n        force = false;\n      }\n\n      if (typeof appId === \'number\') {\n        appId = _this.appList[appId].appId;\n      }\n\n      if (_this.appStatusMap.has(appId)) {\n        var appStatus = _this.appStatusMap.get(appId);\n\n        console.log(appStatus);\n\n        if (!appStatus.active || force) {\n          console.log(\'parnet\', parent, parent instanceof HTMLElement);\n\n          if (parent instanceof HTMLElement) {\n            appStatus.appConfig.parent = parent;\n          }\n\n          var loader = new index_1["default"](appStatus.appConfig);\n          loader.load();\n          appStatus.loader = loader;\n          appStatus.active = true;\n        }\n      } else {\n        console.error("app is not init which appId is " + appId);\n      }\n    };\n\n    this.reLoad = function (appId) {\n      _this.load(appId, null, true);\n    };\n\n    this.add = function (appConfig) {\n      var appStatus = {\n        loader: null,\n        active: false,\n        appId: appConfig.id || _this.getAppId(),\n        appConfig: appConfig\n      };\n\n      _this.appStatusMap.set(appStatus.appId, appStatus);\n\n      _this.appList.push(appStatus);\n    };\n\n    this.del = function (appId) {\n      _this.appList = _this.appList.filter(function (v) {\n        return v.appId === appId;\n      });\n\n      _this.appStatusMap["delete"](appId);\n    };\n\n    this.config = config;\n    this.appList = [];\n    this.appStatusMap = new Map();\n    this.init();\n  }\n\n  AppMannger.APP_INDEX = 0;\n  return AppMannger;\n}();\n\nexports["default"] = AppMannger;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QkFBb0IsQ0FBcEI7QUErRFQ7QUFBQyxDQWhFRDs7cUJBQXFCLFUiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xyXG52YXIgSnNTYW5kQm94XzEgPSByZXF1aXJlKFwiLi4vSnNTYW5kQm94XCIpO1xyXG52YXIgaW5kZXhfMSA9IHJlcXVpcmUoXCIuLi9BcHBMb2FkZXIvaW5kZXhcIik7XHJcbnZhciBDb21tdW5pY2F0b3JfMSA9IHJlcXVpcmUoXCIuLi9Db21tdW5pY2F0b3JcIik7XHJcbkpzU2FuZEJveF8xW1wiZGVmYXVsdFwiXS5kZWZpbmVHbG9iYWxQcm9wZXJ0eSgnSVBDJywgbmV3IENvbW11bmljYXRvcl8xW1wiZGVmYXVsdFwiXSgpKTtcclxudmFyIEFwcE1hbm5nZXIgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQXBwTWFubmdlcihjb25maWcpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuZ2V0QXBwSWQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBcIkFwcElkX1wiICsgQXBwTWFubmdlci5BUFBfSU5ERVgrKzsgfTtcclxuICAgICAgICB0aGlzLmluaXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBhcHBzID0gX3RoaXMuY29uZmlnLmFwcHM7XHJcbiAgICAgICAgICAgIGFwcHMuZm9yRWFjaChmdW5jdGlvbiAoYXBwQ29uZmlnKSB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy5hZGQoYXBwQ29uZmlnKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmxvYWQgPSBmdW5jdGlvbiAoYXBwSWQsIHBhcmVudCwgZm9yY2UpIHtcclxuICAgICAgICAgICAgaWYgKGZvcmNlID09PSB2b2lkIDApIHsgZm9yY2UgPSBmYWxzZTsgfVxyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGFwcElkID09PSAnbnVtYmVyJykge1xyXG4gICAgICAgICAgICAgICAgYXBwSWQgPSBfdGhpcy5hcHBMaXN0W2FwcElkXS5hcHBJZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoX3RoaXMuYXBwU3RhdHVzTWFwLmhhcyhhcHBJZCkpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhcHBTdGF0dXMgPSBfdGhpcy5hcHBTdGF0dXNNYXAuZ2V0KGFwcElkKTtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGFwcFN0YXR1cyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWFwcFN0YXR1cy5hY3RpdmUgfHwgZm9yY2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygncGFybmV0JywgcGFyZW50LCBwYXJlbnQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcFN0YXR1cy5hcHBDb25maWcucGFyZW50ID0gcGFyZW50O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgbG9hZGVyID0gbmV3IGluZGV4XzFbXCJkZWZhdWx0XCJdKGFwcFN0YXR1cy5hcHBDb25maWcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxvYWRlci5sb2FkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwU3RhdHVzLmxvYWRlciA9IGxvYWRlcjtcclxuICAgICAgICAgICAgICAgICAgICBhcHBTdGF0dXMuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJhcHAgaXMgbm90IGluaXQgd2hpY2ggYXBwSWQgaXMgXCIgKyBhcHBJZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMucmVMb2FkID0gZnVuY3Rpb24gKGFwcElkKSB7XHJcbiAgICAgICAgICAgIF90aGlzLmxvYWQoYXBwSWQsIG51bGwsIHRydWUpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hZGQgPSBmdW5jdGlvbiAoYXBwQ29uZmlnKSB7XHJcbiAgICAgICAgICAgIHZhciBhcHBTdGF0dXMgPSB7XHJcbiAgICAgICAgICAgICAgICBsb2FkZXI6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBhY3RpdmU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgYXBwSWQ6IGFwcENvbmZpZy5pZCB8fCBfdGhpcy5nZXRBcHBJZCgpLFxyXG4gICAgICAgICAgICAgICAgYXBwQ29uZmlnOiBhcHBDb25maWdcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgX3RoaXMuYXBwU3RhdHVzTWFwLnNldChhcHBTdGF0dXMuYXBwSWQsIGFwcFN0YXR1cyk7XHJcbiAgICAgICAgICAgIF90aGlzLmFwcExpc3QucHVzaChhcHBTdGF0dXMpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5kZWwgPSBmdW5jdGlvbiAoYXBwSWQpIHtcclxuICAgICAgICAgICAgX3RoaXMuYXBwTGlzdCA9IF90aGlzLmFwcExpc3QuZmlsdGVyKGZ1bmN0aW9uICh2KSB7IHJldHVybiB2LmFwcElkID09PSBhcHBJZDsgfSk7XHJcbiAgICAgICAgICAgIF90aGlzLmFwcFN0YXR1c01hcFtcImRlbGV0ZVwiXShhcHBJZCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcclxuICAgICAgICB0aGlzLmFwcExpc3QgPSBbXTtcclxuICAgICAgICB0aGlzLmFwcFN0YXR1c01hcCA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuICAgIEFwcE1hbm5nZXIuQVBQX0lOREVYID0gMDtcclxuICAgIHJldHVybiBBcHBNYW5uZ2VyO1xyXG59KCkpO1xyXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IEFwcE1hbm5nZXI7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator["throw"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    "throw": verb(1),\n    "return": verb(2)\n  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError("Generator is already executing.");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nexports.__esModule = true;\n\nvar index_1 = __webpack_require__(0);\n\nvar LoadMode;\n\n(function (LoadMode) {\n  LoadMode["js"] = "script";\n  LoadMode["html"] = "html";\n})(LoadMode || (LoadMode = {}));\n\n;\n\nvar getDir = function getDir(path) {\n  var chunks = path.split(\'/\');\n  return chunks.length === 0 ? path : chunks.slice(0, -1).join(\'/\');\n};\n\nfunction uintToString(uintArray) {\n  var encodedString = String.fromCharCode.apply(null, uintArray);\n  return decodeURIComponent(escape(encodedString));\n}\n\nvar AppLoader = function () {\n  function AppLoader(config) {\n    var _this = this;\n\n    this.url = \'\';\n    this.domain = \'\';\n    this.htmlText = \'\';\n    this.script = \'\';\n    this.id = \'\';\n\n    this.runScript = function () {\n      try {\n        _this.jsSandBox.run(_this.script, function () {\n          return _this.mounted();\n        });\n      } catch (e) {\n        console.error(\'加载失败\', e);\n      }\n    };\n\n    this.id = config.id || "Id_" + new Date().getTime().toString(16);\n    this.url = config.url;\n    this.domain = getDir(this.url);\n    this.jsSandBox = new index_1["default"]();\n    this.mode = config.mode;\n    this.parent = config.parent || document.body;\n\n    var defaultLifeCycleFunction = function defaultLifeCycleFunction() {};\n\n    this.beforeLoad = config.beforeLoad || defaultLifeCycleFunction;\n    this.beforeMounted = config.beforeMounted || defaultLifeCycleFunction;\n    this.mounted = config.mounted || defaultLifeCycleFunction;\n    this.beforeDestory = config.beforeDestory || defaultLifeCycleFunction;\n    this.destoryed = config.destoryed || defaultLifeCycleFunction;\n    this.beforeLoad.bind(this);\n    this.beforeDestory.bind(this);\n    this.beforeMounted.bind(this);\n    this.destoryed.bind(this);\n  }\n\n  AppLoader.prototype.load = function (cache) {\n    if (cache === void 0) {\n      cache = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.beforeLoad();\n            data = this.htmlText;\n            if (!!cache) return [3, 2];\n            return [4, this.fetchUrlData(this.url)];\n\n          case 1:\n            data = _a.sent();\n\n            if (typeof data !== \'string\') {\n              console.error("fetch " + this.url + " failed");\n              return [2];\n            }\n\n            this.htmlText = data;\n            _a.label = 2;\n\n          case 2:\n            this.mount();\n            return [2];\n        }\n      });\n    });\n  };\n\n  AppLoader.prototype.mount = function (id) {\n    if (id === void 0) {\n      id = this.id;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var div_1, srcList_1;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        this.beforeMounted();\n\n        if (this.mode === LoadMode.html) {\n          div_1 = document.createElement(\'div\');\n          div_1.id = id;\n          srcList_1 = [];\n          div_1.innerHTML = this.htmlText;\n          div_1.childNodes.forEach(function (v) {\n            if (v.nodeName === \'SCRIPT\') {\n              var src = v.getAttribute(\'src\');\n\n              if (src !== null) {\n                srcList_1.push(src);\n              } else {\n                _this.script += ";" + v.innerText + ";";\n              }\n            }\n\n            if (v.nodeName === \'META\' || v.nodeName === \'TITLE\') {\n              div_1.removeChild(v);\n            }\n          });\n          this.parent.appendChild(div_1);\n          this.loadScriptList(srcList_1);\n        } else {\n          this.script = this.htmlText || \'\';\n          this.jsSandBox.run(this.script, function () {\n            return _this.mounted();\n          });\n        }\n\n        return [2];\n      });\n    });\n  };\n\n  AppLoader.prototype.destory = function () {\n    this.beforeDestory();\n    var root = document.querySelector(this.id);\n    root.innerHTML = \'\';\n    this.destoryed();\n  };\n\n  AppLoader.prototype.loadScriptList = function (urlArray) {\n    return __awaiter(this, void 0, void 0, function () {\n      var i, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            i = 0;\n            _a.label = 1;\n\n          case 1:\n            if (!(i < urlArray.length)) return [3, 4];\n            return [4, this.fetchUrlData(this.domain + \'/\' + urlArray[i])];\n\n          case 2:\n            data = _a.sent();\n\n            if (typeof data !== \'string\') {\n              console.error("fetch " + this.url + " failed");\n              return [2];\n            }\n\n            this.script += data;\n            _a.label = 3;\n\n          case 3:\n            i++;\n            return [3, 1];\n\n          case 4:\n            this.runScript();\n            return [2];\n        }\n      });\n    });\n  };\n\n  AppLoader.prototype.fetchUrlData = function (url) {\n    return new Promise(function (resolve, reject) {\n      fetch(url, {\n        method: \'Get\'\n      }).then(function (res) {\n        res.text().then(function (value) {\n          resolve(value);\n        })["catch"](function (_) {\n          return reject();\n        });\n      })["catch"](function (error) {\n        console.error(error);\n        reject(false);\n      });\n    });\n  };\n\n  return AppLoader;\n}();\n\nexports["default"] = AppLoader;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.__esModule = true;\n\nvar ChannelNode = function () {\n  function ChannelNode() {\n    this.callbackList = [];\n    this.childChannel = new Map();\n  }\n\n  ChannelNode.prototype.add = function (cb) {\n    var result = false;\n\n    if (typeof cb === 'function') {\n      this.callbackList.push(cb);\n      result = true;\n    }\n\n    return result;\n  };\n\n  ChannelNode.prototype.remove = function (cb) {\n    var result = false;\n    var oldIndex = this.callbackList.indexOf(cb);\n\n    if (oldIndex > -1) {\n      this.callbackList.splice(oldIndex, 1);\n      result = true;\n    }\n\n    return result;\n  };\n\n  ChannelNode.prototype.addChild = function (name, child) {\n    if (child === void 0) {\n      child = new ChannelNode();\n    }\n\n    if (typeof name !== 'string') {\n      console.error(new TypeError('name is not a string'));\n      return false;\n    }\n\n    if (!(child instanceof ChannelNode)) {\n      console.error(new TypeError('child is not a ChannelNode'));\n      return false;\n    }\n\n    if (this.hasChild(name)) {\n      console.error(new Error('this child node has been added'));\n      return false;\n    }\n\n    this.childChannel.set(name, child);\n    return true;\n  };\n\n  ChannelNode.prototype.hasChild = function (name) {\n    return this.childChannel.has(name);\n  };\n\n  ChannelNode.prototype.getChild = function (name) {\n    return this.childChannel.get(name);\n  };\n\n  ChannelNode.prototype.run = function (payload) {\n    this.callbackList.forEach(function (fn) {\n      fn(payload);\n    });\n  };\n\n  return ChannelNode;\n}();\n\nvar Communicator = function () {\n  function Communicator() {}\n\n  Communicator.prototype.on = function (channel, cb) {\n    var curChannelNode = Communicator.ChannelRoot;\n\n    if (typeof channel !== 'string') {\n      console.error(new TypeError('channel is not a string'));\n      return;\n    }\n\n    var channelList = channel.split(':');\n    channelList.forEach(function (v) {\n      if (!curChannelNode.hasChild(v)) {\n        curChannelNode.addChild(v);\n      }\n\n      curChannelNode = curChannelNode.getChild(v);\n    });\n    curChannelNode.add(cb);\n  };\n\n  Communicator.prototype.emit = function (channel, payload) {\n    if (typeof channel !== 'string') {\n      console.error(new TypeError('channel is not a string'));\n    }\n\n    var channelList = channel.split(':');\n    var curChannelNode = Communicator.ChannelRoot;\n    var isAll = false;\n\n    for (var i = 0; i < channelList.length; i++) {\n      var item = channelList[i];\n\n      if (item === '*') {\n        isAll = true;\n        break;\n      }\n\n      if (curChannelNode.hasChild(item)) {\n        curChannelNode = curChannelNode.getChild(item);\n      } else {\n        curChannelNode = null;\n        break;\n      }\n    }\n\n    if (curChannelNode) {\n      if (isAll) {\n        curChannelNode.childChannel.forEach(function (node) {\n          node.run(payload);\n        });\n      } else {\n        curChannelNode.run(payload);\n      }\n    }\n  };\n\n  Communicator.ChannelRoot = new ChannelNode();\n  return Communicator;\n}();\n\nfunction singleMode(constructor) {\n  var foo = null;\n\n  var fn = function fn() {\n    if (!foo) {\n      foo = Object.create(constructor.prototype);\n      constructor.call(foo);\n    }\n\n    return foo;\n  };\n\n  return fn;\n}\n\nexports[\"default\"] = singleMode(Communicator);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n")}])}));